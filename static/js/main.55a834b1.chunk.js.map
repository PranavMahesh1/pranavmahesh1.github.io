{"version":3,"sources":["Components/Header.js","Components/Footer.js","Components/About.js","Components/Contact.js","Components/Projects.js","App.js","registerServiceWorker.js","index.js"],"names":["Header","this","props","data","name","networks","social","map","network","key","href","url","className","id","title","Component","Footer","About","resumeDownload","resumedownload","class","alt","src","Contact","Projects","projects","projectImage","image","category","App","state","foo","resumeData","ReactGA","initialize","pageview","window","location","pathname","$","ajax","dataType","cache","success","setState","bind","error","xhr","status","err","console","log","alert","getResumeData","main","Boolean","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.55a834b1.chunk.js","sourcesContent":["import React, { Component } from 'react';\n\nclass Header extends Component {\n  render() {\n\n    if(this.props.data){\n      var name = this.props.data.name;\n      var networks= this.props.data.social.map(function(network){\n        return <li key={network.name}><a href={network.url}><i className={network.className}></i></a></li>\n      })\n    }\n\n    return (\n      <header id=\"home\">\n\n      <nav id=\"nav-wrap\">\n\n         <a className=\"mobile-btn\" href=\"#nav-wrap\" title=\"Show navigation\">Show navigation</a>\n\t      <a className=\"mobile-btn\" href=\"#home\" title=\"Hide navigation\">Hide navigation</a>\n\n         <ul id=\"nav\" className=\"nav\">\n            <li className=\"current\"><a className=\"smoothscroll\" href=\"#home\">Home</a></li>\n            <li><a className=\"smoothscroll\" href=\"#about\">About</a></li>\n            <li><a className=\"smoothscroll\" href=\"#projects\">Projects</a></li>\n            <li><a className=\"smoothscroll\" href=\"#contact\">Contact</a></li>\n            <li><a href=\"./Resume_Pranav_Website.pdf\">Resume</a></li>\n         </ul>\n\n      </nav>\n\n      <div className=\"row banner\">\n         <div className=\"banner-text\">\n            <h1>{name}</h1>\n            <h3>Hi there! I'm Pranav, incoming second year <b>Computer Science</b> major at <b>Georgia Tech</b>, and aspiring software engineer.</h3>\n            <hr />\n            <ul className=\"social\">\n               {networks}\n            </ul>\n         </div>\n      </div>\n\n      <p className=\"scrolldown\">\n         <a className=\"smoothscroll\" href=\"#about\"><i className=\"icon-down-circle\"></i></a>\n      </p>\n\n   </header>\n    );\n  }\n}\n\nexport default Header;\n","import React, { Component } from 'react';\n\nclass Footer extends Component {\n  render() {\n\n    if(this.props.data){\n      var networks= this.props.data.social.map(function(network){\n        return <li key={network.name}><a href={network.url}><i className={network.className}></i></a></li>\n      })\n    }\n\n    return (\n      <footer>\n\n     <div className=\"row\">\n        <div className=\"twelve columns\">\n           <ul className=\"social-links\">\n              {networks}\n           </ul>\n\n           <ul className=\"copyright\">\n              <li>&copy; Copyright 2020 Pranav Mahesh</li>\n              <li>Based on Tim Baker's <a href=\"https://github.com/tbakerx/react-resume-template\">Website Template</a></li>\n           </ul>\n\n        </div>\n        <div id=\"go-top\"><a className=\"smoothscroll\" title=\"Back to Top\" href=\"#home\"><i className=\"icon-up-open\"></i></a></div>\n     </div>\n  </footer>\n    );\n  }\n}\n\nexport default Footer;\n","import React, { Component } from 'react';\n\nclass About extends Component {\n   render() {\n\n      if (this.props.data) {\n         var resumeDownload = this.props.data.resumedownload;\n      }\n\n      return (\n         <section id=\"about\">\n            <div class=\"row\">\n               <div class=\"column\">\n                  <h2>About Me</h2>\n                  <p>I'm Pranav Mahesh, a rising second-year CS student at Georgia Tech who's passionate about software development, cybersecurity, and artificial intelligence. My interests include playing the piano and violin, practicing karate, playing Nintendo games, and learning new technical skills.</p>\n                  <p>In May, I participated in Capital One's <a href=\"https://campus.capitalone.com/summits/\">Software Engineering Summit</a>, learning about AWS, Machine Learning, Arduinos, and Android Development.\n                  This summer, I'm working remotely for <a href=\"https://arcs.gatech.edu/\">ARCS</a> to provide technical support for the students and faculty of the GT College of Sciences during the COVID-19 pandemic, along with taking some summer classes and expanding my technical skills.\n                  </p>\n                  <p>I'm currently open to Software Engineering/Development Intern roles for Summer 2021.</p>\n               </div>\n               <div class=\"column\">\n                  <img alt=\"Software Development\" src=\"./images/softwaredev.png\" />\n               </div>\n            </div>\n            <div className=\"row\">\n               <div className=\"columns download\">\n                  <p>\n                     <a href={resumeDownload} className=\"button\"><i className=\"fa fa-download\"></i>Download Resume</a>\n                  </p>\n               </div>\n            </div>\n         </section>\n      );\n   }\n}\n\nexport default About;","import React, { Component } from 'react';\n\nclass Contact extends Component {\n  render() {\n    return (\n      <section id=\"contact\">\n         <center>\n         <h1>Want to get in contact?</h1>\n         <p>You can reach me by <a href=\"mailto:pmahesh@gatech.edu\">email</a> or through <a href=\"https://www.linkedin.com/in/pranav-mahesh/\">LinkedIn</a>.</p>\n         </center>\n   </section>\n    );\n  }\n}\n\nexport default Contact;\n","import React, { Component } from 'react';\n\nclass Projects extends Component {\n  render() {\n\n    if(this.props.data){\n      var projects = this.props.data.projects.map(function(projects){\n        var projectImage = 'images/projects/'+projects.image;\n        return <div key={projects.title} className=\"columns projects-item\">\n           <div className=\"item-wrap\">\n            <a href={projects.url} title={projects.title}>\n               <img alt={projects.title} src={projectImage} />\n               <div className=\"overlay\">\n                  <div className=\"projects-item-meta\">\n                 <h5>{projects.title}</h5>\n                     <p>{projects.category}</p>\n                  </div>\n                </div>\n              <div className=\"link-icon\"><i className=\"fa fa-link\"></i></div>\n            </a>\n          </div>\n        </div>\n      })\n    }\n\n    return (\n      <section id=\"projects\">\n\n      <div className=\"row\">\n\n         <div className=\"twelve columns collapsed\">\n\n            <h1>Personal & Class Projects</h1>\n\n            <div id=\"projects-wrapper\" className=\"bgrid-quarters s-bgrid-thirds cf\">\n                {projects}\n            </div>\n<center>\n            <a href=\"https://github.com/PranavMahesh1\" className=\"button\"><i className=\"fa fa-github\"></i> My Github Profile</a>\n            </center>\n          </div>\n      </div>\n   </section>\n    );\n  }\n}\n\nexport default Projects;\n","import React, { Component } from 'react';\nimport ReactGA from 'react-ga';\nimport $ from 'jquery';\nimport './App.css';\nimport Header from './Components/Header';\nimport Footer from './Components/Footer';\nimport About from './Components/About';\nimport Contact from './Components/Contact';\nimport Projects from './Components/Projects';\n\n\nclass App extends Component {\n\n  constructor(props){\n    super(props);\n    this.state = {\n      foo: 'bar',\n      resumeData: {}\n    };\n\n    ReactGA.initialize('UA-110570651-1');\n    ReactGA.pageview(window.location.pathname);\n\n  }\n\n  getResumeData(){\n    $.ajax({\n      url:'/resumeData.json',\n      dataType:'json',\n      cache: false,\n      success: function(data){\n        this.setState({resumeData: data});\n      }.bind(this),\n      error: function(xhr, status, err){\n        console.log(err);\n        alert(err);\n      }\n    });\n  }\n\n  componentDidMount(){\n    this.getResumeData();\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Header data={this.state.resumeData.main}/>\n        <About data={this.state.resumeData.main}/>\n        <Projects data={this.state.resumeData.projects}/>\n        <Contact data={this.state.resumeData.main}/>\n        <Footer data={this.state.resumeData.main}/>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n//import registerServiceWorker from './registerServiceWorker';\nimport { unregister } from \"./registerServiceWorker\";\n\nReactDOM.render(<App />, document.getElementById('root'));\nunregister();\n"],"sourceRoot":""}