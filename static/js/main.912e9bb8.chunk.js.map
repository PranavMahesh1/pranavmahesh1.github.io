{"version":3,"sources":["Components/Header.js","Components/Footer.js","Components/About.js","Components/Contact.js","Components/Projects.js","App.js","Components/Resume.js","registerServiceWorker.js","index.js"],"names":["Header","this","props","data","name","networks","social","map","network","key","href","url","className","id","title","Component","Footer","About","class","alt","src","Contact","Projects","projects","projectImage","image","category","App","state","foo","resumeData","ReactGA","initialize","pageview","window","location","pathname","$","ajax","dataType","cache","success","setState","bind","error","xhr","status","err","console","log","alert","getResumeData","main","Boolean","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.912e9bb8.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\n\r\nclass Header extends Component {\r\n  render() {\r\n\r\n    if(this.props.data){\r\n      var name = this.props.data.name;\r\n      var networks= this.props.data.social.map(function(network){\r\n        return <li key={network.name}><a href={network.url}><i className={network.className}></i></a></li>\r\n      })\r\n    }\r\n\r\n    return (\r\n      <header id=\"home\">\r\n\r\n      <nav id=\"nav-wrap\">\r\n\r\n         <a className=\"mobile-btn\" href=\"#nav-wrap\" title=\"Show navigation\">Show navigation</a>\r\n\t      <a className=\"mobile-btn\" href=\"#home\" title=\"Hide navigation\">Hide navigation</a>\r\n\r\n         <ul id=\"nav\" className=\"nav\">\r\n            <li className=\"current\"><a className=\"smoothscroll\" href=\"#home\">Home</a></li>\r\n            <li><a className=\"smoothscroll\" href=\"#about\">About</a></li>\r\n            <li><a className=\"smoothscroll\" href=\"#projects\">Projects</a></li>\r\n            <li><a className=\"smoothscroll\" href=\"#contact\">Contact</a></li>\r\n           <li><a className=\"smoothscroll\" href=\"/Resume.pdf\">Resume</a></li>\r\n         </ul>\r\n\r\n      </nav>\r\n\r\n      <div className=\"row banner\">\r\n         <div className=\"banner-text\">\r\n            <h1>{name}</h1>\r\n            <h3>Hi there! I'm Pranav, an aspiring software engineer pursuing my <b>M.S. in Computer Science</b> at <b>Georgia Tech</b>. I enjoy coming up with creative solutions to tackle challenging problems and solve customer issues.</h3>\r\n            \r\n            <ul className=\"social\">\r\n               {networks}\r\n            </ul>\r\n         </div>\r\n      </div>\r\n\r\n      <p className=\"scrolldown\">\r\n         <a className=\"smoothscroll\" href=\"#about\"><i className=\"icon-down-circle\"></i></a>\r\n      </p>\r\n\r\n   </header>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Header;\r\n","import React, { Component } from 'react';\r\n\r\nclass Footer extends Component {\r\n  render() {\r\n\r\n    if(this.props.data){\r\n      var networks= this.props.data.social.map(function(network){\r\n        return <li key={network.name}><a href={network.url}><i className={network.className}></i></a></li>\r\n      })\r\n    }\r\n\r\n    return (\r\n      <footer>\r\n\r\n     <div className=\"row\">\r\n        <div className=\"twelve columns\">\r\n           <ul className=\"social-links\">\r\n              {networks}\r\n           </ul>\r\n\r\n           <ul className=\"copyright\">\r\n              <li>&copy; Copyright 2020 Pranav Mahesh</li>\r\n              <li>Based on Tim Baker's <a href=\"https://github.com/tbakerx/react-resume-template\">Website Template</a></li>\r\n           </ul>\r\n\r\n        </div>\r\n        <div id=\"go-top\"><a className=\"smoothscroll\" title=\"Back to Top\" href=\"#home\"><i className=\"icon-up-open\"></i></a></div>\r\n     </div>\r\n  </footer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Footer;\r\n","import React, { Component } from 'react';\r\n\r\nclass About extends Component {\r\n   render() {\r\n\r\n      if (this.props.data) {\r\n      }\r\n\r\n      return (\r\n         <section id=\"about\">\r\n            <div class=\"row\">\r\n               <div class=\"column\">\r\n                  <h2>About Me</h2>\r\n                  <p>I'm Pranav Mahesh, a current M.S. CS student at Georgia Tech concentrating in <b>Machine Learning</b>. I graduated with my B.S. from Georgia Tech in <b>May 2022</b>. My career interests are software development, cybersecurity, and artificial intelligence. My hobbies include playing the piano and violin and playing video games.</p>\r\n                  <p>Currently, I'm a <b>Graduate Teaching Assistant</b> for <a href=\"https://gt-student-wiki.org/mediawiki/index.php/CS_3001\">CS 3001 - Computing & Society</a> at Georgia Tech.</p>\r\n                  <p>For the last two summers, I was a <b>Software Engineer Intern at Amazon</b>. I automated the process of third-party retailer creation for Just Walk Out Technology, and deployed a new feature to the retailers' catalog page to help solve an important customer issue!</p>\r\n                  \r\n                  <p>I'm currently open to <b>Software Engineering/Development full-time roles for Summer 2023</b>. Check out my <a href=\"/Resume.pdf\">resume</a> and email me if you want to get in touch!</p>\r\n               </div>\r\n               <div class=\"column\">\r\n                  <img alt=\"Software Development\" src=\"./images/softwaredev.png\" />\r\n               </div>\r\n            </div>\r\n         </section>\r\n      );\r\n   }\r\n}\r\n\r\nexport default About;","import React, { Component } from 'react';\r\n\r\nclass Contact extends Component {\r\n  render() {\r\n    return (\r\n      <section id=\"contact\">\r\n         <center>\r\n         <h1>Want to contact me?</h1>\r\n         <p>You can reach me by <a href=\"mailto:pranavmahesh2001@gmail.com\">email</a> or through <a href=\"https://www.linkedin.com/in/pranav-mahesh/\">LinkedIn</a>.</p>\r\n         </center>\r\n   </section>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Contact;\r\n","import React, { Component } from 'react';\r\n\r\nclass Projects extends Component {\r\n  render() {\r\n\r\n    if(this.props.data){\r\n      var projects = this.props.data.projects.map(function(projects){\r\n        var projectImage = 'images/projects/'+projects.image;\r\n        return <div key={projects.title} className=\"columns projects-item\">\r\n           <div className=\"item-wrap\">\r\n            <a href={projects.url} title={projects.title}>\r\n               <img alt={projects.title} src={projectImage} />\r\n               <div className=\"overlay\">\r\n                  <div className=\"projects-item-meta\">\r\n                 <h5>{projects.title}</h5>\r\n                     <p>{projects.category}</p>\r\n                  </div>\r\n                </div>\r\n              {/*<div className=\"link-icon\"><i className=\"fa fa-link\"></i></div>*/}\r\n            </a>\r\n          </div>\r\n        </div>\r\n      })\r\n    }\r\n\r\n    return (\r\n      <section id=\"projects\">\r\n\r\n      <div className=\"row\">\r\n\r\n         <div className=\"twelve columns collapsed\">\r\n\r\n            <h1>Projects</h1>\r\n\r\n            <div id=\"projects-wrapper\" className=\"bgrid-quarters s-bgrid-thirds cf\">\r\n                {projects}\r\n            </div>\r\n<center>\r\n            <a href=\"https://github.com/PranavMahesh1\" className=\"button\"><i className=\"fa fa-github\"></i> My Github Profile</a>\r\n            </center>\r\n          </div>\r\n      </div>\r\n   </section>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Projects;\r\n","import React, { Component } from 'react';\r\nimport ReactGA from 'react-ga';\r\nimport $ from 'jquery';\r\nimport './App.css';\r\nimport Header from './Components/Header';\r\nimport Footer from './Components/Footer';\r\nimport About from './Components/About';\r\nimport Contact from './Components/Contact';\r\nimport Projects from './Components/Projects';\r\nimport Resume from './Components/Resume';\r\n\r\n\r\nclass App extends Component {\r\n\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      foo: 'bar',\r\n      resumeData: {}\r\n    };\r\n\r\n    ReactGA.initialize('UA-110570651-1');\r\n    ReactGA.pageview(window.location.pathname);\r\n\r\n  }\r\n\r\n  getResumeData(){\r\n    $.ajax({\r\n      url:'/resumeData.json',\r\n      dataType:'json',\r\n      cache: false,\r\n      success: function(data){\r\n        this.setState({resumeData: data});\r\n      }.bind(this),\r\n      error: function(xhr, status, err){\r\n        console.log(err);\r\n        alert(err);\r\n      }\r\n    });\r\n  }\r\n\r\n  componentDidMount(){\r\n    this.getResumeData();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n        <Header data={this.state.resumeData.main}/>\r\n        <About data={this.state.resumeData.main}/>\r\n        {/*<Resume data={this.state.resumeData.resume}/>*/}\r\n        <Projects data={this.state.resumeData.projects}/>\r\n        <Contact data={this.state.resumeData.main}/>\r\n        <Footer data={this.state.resumeData.main}/>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React, { Component } from 'react';\r\n\r\nclass Resume extends Component {\r\n  render() {\r\n\r\n    if(this.props.data){\r\n      var skillmessage = this.props.data.skillmessage;\r\n      var education = this.props.data.education.map(function(education){\r\n        return <div key={education.school}><h3>{education.school}</h3>\r\n        <p className=\"info\">{education.degree} <span>&bull;</span><em className=\"date\">{education.graduated}</em></p>\r\n        <p>{education.description}</p></div>\r\n      })\r\n      var work = this.props.data.work.map(function(work){\r\n        return <div key={work.company}><h3>{work.company}</h3>\r\n            <p className=\"info\">{work.title}<span> &bull; </span> <em className=\"date\">{work.years}</em></p>\r\n            <p>&bull; {work.description}</p>\r\n            <p>&bull; {work.description2}</p>\r\n            <p>&bull; {work.description3}</p>\r\n        </div>\r\n      })\r\n      var skills = this.props.data.skills.map(function(skills){\r\n        var className = 'bar-expand '+skills.name.toLowerCase();\r\n        return <li key={skills.name}><span style={{width:skills.level}}className={className}></span><em>{skills.name}</em></li>\r\n      })\r\n    }\r\n\r\n    return (\r\n      <section id=\"resume\">\r\n\r\n      <div className=\"row education\">\r\n         <div className=\"three columns header-col\">\r\n            <h1><span>Education</span></h1>\r\n         </div>\r\n\r\n         <div className=\"nine columns main-col\">\r\n            <div className=\"row item\">\r\n               <div className=\"twelve columns\">\r\n                 {education}\r\n               </div>\r\n            </div>\r\n         </div>\r\n      </div>\r\n\r\n\r\n      <div className=\"row work\">\r\n\r\n         <div className=\"three columns header-col\">\r\n            <h1><span>Work</span></h1>\r\n         </div>\r\n\r\n         <div className=\"nine columns main-col\">\r\n          {work}\r\n        </div>\r\n    </div>\r\n\r\n\r\n\r\n      <div className=\"row skill\">\r\n\r\n         <div className=\"three columns header-col\">\r\n            <h1><span>Skills</span></h1>\r\n         </div>\r\n\r\n         <div className=\"nine columns main-col\">\r\n\r\n            <p>{skillmessage}\r\n            </p>\r\n\r\n\t\t\t\t<div className=\"bars\">\r\n\t\t\t\t   <ul className=\"skills\">\r\n\t\t\t\t\t  {skills}\r\n\t\t\t\t\t</ul>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n      </div>\r\n   </section>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Resume;","// In production, we register a service worker to serve assets from local cache.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\r\n// cached resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\r\n// This link also includes instructions on opting out of this behavior.\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport default function register() {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Lets check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl);\r\n      } else {\r\n        // Is not local host. Just register service worker\r\n        registerValidSW(swUrl);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the old content will have been purged and\r\n              // the fresh content will have been added to the cache.\r\n              // It's the perfect time to display a \"New content is\r\n              // available; please refresh.\" message in your web app.\r\n              console.log('New content is available; please refresh.');\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      if (\r\n        response.status === 404 ||\r\n        response.headers.get('content-type').indexOf('javascript') === -1\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n//import registerServiceWorker from './registerServiceWorker';\r\nimport { unregister } from \"./registerServiceWorker\";\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\nunregister();\r\n"],"sourceRoot":""}